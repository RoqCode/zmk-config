/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <150>;
    flavor = "balanced";
    quick-tap-ms = <250>;
};

&lt {
    tapping-term-ms = <150>;
    quick-tap-ms = <250>;
    flavor = "balanced";
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE SLASH FSLH>; };

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        toggle_gaming_layer {
            bindings = <&tog 4>;
            key-positions = <0 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp DEL          &kp Q        &kp W       &kp E            &kp R             &kp T              &kp Y        &kp U         &kp I                     &kp O       &kp P           &kp LEFT_BRACKET
&mt LGUI TAB     &mt LCTRL A  &mt LALT S  &mt LEFT_GUI D   &mt LEFT_SHIFT F  &kp G              &kp H        &mt RSHIFT J  &mt RGUI K                &mt RALT L  &mt RCTRL SEMI  &kp SQT
&kp NON_US_BSLH  &kp Z        &kp X       &kp C            &kp V             &kp B              &kp N        &kp M         &kp COMMA                 &kp DOT     &kp FSLH        &kp NON_US_HASH
                                          &lt 0 LA(SPACE)  &lt 0 ESC         &lt 2 BACKSPACE    &lt 1 SPACE  &lt 3 ENTER   &sk LS(LA(LC(LG(RALT))))
            >;
        };

        Symbols {
            bindings = <
&kp NON_US_BSLH  &kp LA(L)  &kp LS(NUMBER_4)  &kp LA(E)         &kp LS(N7)           &kp LA(N7)           &kp LS(NUMBER_1)  &kp LA(LS(N7))  &kp LS(N5)  &trans            &trans         &kp MINUS
&trans           &kp GRAVE  &kp LA(N5)        &kp LA(N8)        &kp LS(N8)           &kp LS(NUMBER_6)     &kp LS(MINUS)     &kp LS(N9)      &kp LA(N9)  &kp LA(NUMBER_6)  &kp LS(GRAVE)  &kp RIGHT_BRACKET
&trans           &trans     &trans            &kp LS(NUMBER_2)  &kp LS(NON_US_HASH)  &kp LS(EQUAL)        &kp LS(N0)        &kp LA(N)       &trans      &trans            &trans         &kp LS(RIGHT_BRACKET)
                                              &trans            &trans               &kp LA(BACKSPACE)    &none             &trans          &trans
            >;
        };

        Nav-Fn {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans        &trans        &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT       &kp LS(LG(NUMBER_4))    &kp LG(LEFT_ARROW)  &kp LA(LEFT)    &kp PAGE_UP    &kp LA(RIGHT)  &kp LG(RIGHT)  &trans
&out OUT_TOG  &trans        &kp C_VOL_DN  &kp C_MUTE        &kp C_VOLUME_UP  &kp CAPS                &kp LEFT_ARROW      &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT      &trans         &trans
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4            &trans              &trans          &kp PAGE_DOWN  &trans         &trans         &trans
                                          &trans            &trans           &none                   &trans              &kp LS(ENTER)   &trans
            >;
        };

        Num {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
&kp ESC  &kp TAB    &kp Q  &kp W     &kp E     &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp LSHFT  &kp A  &kp S     &kp D     &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp LCTRL  &kp Y  &kp X     &kp C     &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                           &kp LALT  &kp LGUI  &kp SPACE    &trans  &trans  &trans
            >;
        };
    };
};
