/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <150>;
    flavor = "balanced";
    quick-tap-ms = <250>;
};

&lt {
    tapping-term-ms = <150>;
    quick-tap-ms = <250>;
    flavor = "balanced";
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE SLASH FSLH>; };

/ {
    behaviors {
        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <125>;
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;

            label = "HRM_LEFT";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <125>;
            quick-tap-ms = <250>;
            bindings = <&kp>, <&kp>;

            label = "HRM_RIGHT";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        to_colemak {
            bindings = <&tog 2>;
            key-positions = <11 35>;
        };

        to_no_hrm {
            bindings = <&tog 1>;
            key-positions = <12 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp DEL          &kp Q              &kp W             &kp E                 &kp R                   &kp T              &kp Y        &kp U                &kp I                     &kp O              &kp P                  &kp LEFT_BRACKET
&mt LGUI TAB     &hrm_left LCTRL A  &hrm_left LALT S  &hrm_left LEFT_GUI D  &hrm_left LEFT_SHIFT F  &kp G              &kp H        &hrm_right RSHIFT J  &hrm_right RGUI K         &hrm_right RALT L  &hrm_right RCTRL SEMI  &kp SQT
&kp NON_US_BSLH  &kp Z              &kp X             &kp C                 &kp V                   &kp B              &kp N        &kp M                &kp COMMA                 &kp DOT            &kp FSLH               &kp NON_US_HASH
                                                      &kp LA(SPACE)         &kp ESCAPE              &lt 4 BACKSPACE    &lt 3 SPACE  &lt 5 ENTER          &sk LS(LA(LC(LG(RALT))))
            >;
        };

        no_hrm {
            bindings = <
&mt LALT DEL           &kp Q  &kp W  &kp E          &kp R               &kp T              &kp Y        &kp U        &kp I                     &kp O    &kp P     &mt RALT LEFT_BRACKET
&mt LGUI TAB           &kp A  &kp S  &kp D          &kp F               &kp G              &kp H        &kp J        &kp K                     &kp L    &kp SEMI  &mt RGUI SQT
&mt LCTRL NON_US_BSLH  &kp Z  &kp X  &kp C          &kp V               &kp B              &kp N        &kp M        &kp COMMA                 &kp DOT  &kp FSLH  &mt RCTRL NON_US_HASH
                                     &kp LA(SPACE)  &mt LEFT_SHIFT ESC  &lt 4 BACKSPACE    &lt 3 SPACE  &lt 5 ENTER  &sk LS(LA(LC(LG(RALT))))
            >;
        };

        Colemak-DH {
            bindings = <
&kp DEL          &kp Q              &kp W                 &kp F                 &kp P               &kp B              &kp J        &kp L                    &kp U                     &kp Y                 &kp SEMI           &kp LEFT_BRACKET
&mt LGUI TAB     &hrm_left LCTRL A  &hrm_left LEFT_ALT R  &hrm_left LEFT_GUI S  &hrm_left LSHIFT T  &kp G              &kp M        &hrm_left RIGHT_SHIFT N  &hrm_left LEFT_GUI E      &hrm_left LEFT_ALT I  &hrm_left LCTRL O  &kp SQT
&kp NON_US_BSLH  &kp Z              &kp X                 &kp C                 &kp D               &kp V              &kp K        &kp H                    &kp COMMA                 &kp DOT               &kp FSLH           &kp NON_US_HASH
                                                          &kp LA(SPACE)         &kp ESCAPE          &lt 4 BACKSPACE    &lt 3 SPACE  &lt 5 ENTER              &sk LS(LA(LC(LG(RALT))))
            >;
        };

        Symbols {
            bindings = <
&kp NON_US_BSLH  &kp LA(L)  &kp LS(NUMBER_4)  &kp LA(E)         &kp LS(N7)           &kp LA(N7)           &kp LS(NUMBER_1)  &kp LA(LS(N7))  &kp LS(N5)  &trans            &trans         &kp MINUS
&trans           &kp GRAVE  &kp LA(N5)        &kp LA(N8)        &kp LS(N8)           &kp LS(NUMBER_6)     &kp LS(MINUS)     &kp LS(N9)      &kp LA(N9)  &kp LA(NUMBER_6)  &kp LS(GRAVE)  &kp RIGHT_BRACKET
&trans           &trans     &trans            &kp LS(NUMBER_2)  &kp LS(NON_US_HASH)  &kp LS(EQUAL)        &kp LS(N0)        &kp LA(N)       &trans      &trans            &trans         &kp LS(RIGHT_BRACKET)
                                              &trans            &trans               &kp LA(BACKSPACE)    &none             &trans          &trans
            >;
        };

        Nav-Fn {
            bindings = <
&trans        &trans        &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT       &kp LS(LG(NUMBER_4))    &kp LG(LEFT_ARROW)  &kp LA(LEFT)    &kp PAGE_UP    &kp LA(RIGHT)  &kp LG(RIGHT)  &trans
&out OUT_TOG  &trans        &kp C_VOL_DN  &kp C_MUTE        &kp C_VOLUME_UP  &kp CAPS                &kp LEFT_ARROW      &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT      &trans         &trans
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4            &trans              &trans          &kp PAGE_DOWN  &trans         &trans         &trans
                                          &trans            &trans           &none                   &trans              &kp LS(ENTER)   &trans
            >;
        };

        Num {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
